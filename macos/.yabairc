# ===== notes =====

# this configuration is mostly for my own use.
# experiment at your own risk.

# ===== loading =====

sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# ===== configuration =====

yabai -m config mouse_follows_focus            off
yabai -m config focus_follows_mouse            on
yabai -m config window_origin_display          default
yabai -m config window_placement               second_child
yabai -m config window_zoom_persist            on
yabai -m config window_topmost                 off
yabai -m config window_shadow                  on
yabai -m config window_animation_duration      0.0
yabai -m config window_animation_frame_rate    120
yabai -m config window_opacity_duration        0.0
yabai -m config active_window_opacity          1.0
yabai -m config normal_window_opacity          0.80
yabai -m config window_opacity                 on
yabai -m config insert_feedback_color          0xffd75f5f
yabai -m config active_window_border_color     0xff775759
yabai -m config normal_window_border_color     0xff555555
yabai -m config window_border_width            2
yabai -m config window_border_radius           12
yabai -m config window_border_blur             off
yabai -m config window_border_hidpi            on
yabai -m config window_border                  off
yabai -m config split_ratio                    0.60
yabai -m config split_type                     auto
yabai -m config auto_balance                   on
yabai -m config top_padding                    20
yabai -m config bottom_padding                 20
yabai -m config left_padding                   20
yabai -m config right_padding                  20
yabai -m config window_gap                     15
yabai -m config layout                         bsp
yabai -m config mouse_modifier                 ctrl
yabai -m config mouse_action1                  move
yabai -m config mouse_action2                  resize
yabai -m config mouse_drop_action              swap

# ===== signals =====

yabai -m signal --add event=window_destroyed active=yes action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse &> /dev/null || yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id) &> /dev/null"
yabai -m signal --add event=window_minimized active=yes action="if \$(yabai -m query --windows --window \$YABAI_WINDOW_ID | jq -r '.\"is-floating\"'); then yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse &> /dev/null || yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id) &> /dev/null; fi"

# ===== rules =====

yabai -m rule --add label="CleanShot X" app="^CleanShot X$" manage=off
yabai -m rule --add label="JetBrains Toolbox" app="^JetBrains\ Toolbox$" manage=off
yabai -m rule --add label="Sip" app="^Sip$" manage=off
yabai -m rule --add label="Setapp" app="^Setapp$" manage=off

echo "yabai config active"